data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
ggplot(preds, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Days Since Deployment",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
plot_total_abundance("No Name")
plot_total_abundance("Sattakut")
plot_total_abundance <- function(pair_name, data = fish_totals, origin = "2023-12-01") {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Artificial" = "#F8766D", "Natural" = "#00BFC4")) +
scale_fill_manual(values = c("Artificial" = "#F8766D", "Natural" = "#00BFC4")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
plot_total_abundance <- function(pair_name, data = fish_totals, origin = "2023-12-01") {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
plot_total_abundance("No Name")
plot_total_abundance("Sattakut")
##### lets get predicted abundances over time for each site pair ###
fish_totals <- fish_long %>%
group_by(Site, Date, Type, pair, date_num) %>%
summarise(Total_Count = sum(Count, na.rm = TRUE), .groups = "drop")
fish_totals %>%
count(Site, Date, Type) %>%
filter(n > 1)
plot_total_abundance <- function(pair_name, data = fish_totals, origin = "2023-12-01") {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance <- function(pair_name, data = fish_totals, origin = "2022-01-01") {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
fish_totals <- fish_long %>%
group_by(Site, Date, Type, pair, date_num) %>%
summarise(Total_Count = sum(Count, na.rm = TRUE), .groups = "drop")
plot_total_abundance <- function(pair_name, data = fish_totals, origin = "2022-01-01") {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
##### lets get predicted abundances over time for each site pair ###
fish_totals <- fish_long %>%
group_by(Site, Date, Type, pair, date_num, Species) %>%
summarise(mean_count = mean(Count, na.rm = TRUE), .groups = "drop") %>%
group_by(Site, Date, Type, pair, date_num) %>%
summarise(Total_Count = sum(mean_count), .groups = "drop")
plot_total_abundance <- function(pair_name, data = fish_totals, origin = origin_date) {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
plot_total_abundance("No Name")
plot_total_abundance("Sattakut")
##### lets get predicted abundances over time for each site pair ###
fish_totals <- fish_long %>%
group_by(Site, Date, Type, pair, date_num, Species) %>%
summarise(mean_count = mean(Count, na.rm = TRUE), .groups = "drop") %>%
group_by(Site, Date, Type, pair, date_num) %>%
summarise(Total_Count = ceiling(sum(mean_count)), .groups = "drop")
plot_total_abundance <- function(pair_name, data = fish_totals, origin = origin_date) {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
plot_total_abundance("No Name")
plot_total_abundance("Sattakut")
plot_total_abundance <- function(pair_name, data = fish_totals, origin = origin_date) {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)  # Convert date_num back to real date
ggplot(preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = paste("Predicted Total Fish Abundance \n Over Time at", pair_name),
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
}
plot_total_abundance("Aow Mao")
plot_total_abundance("No Name")
plot_total_abundance("Sattakut")
get_total_abundance_preds <- function(pair_name, data = fish_totals, origin = origin_date) {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)
preds$pair <- pair_name
return(preds)
}
all_preds <- map_dfr(c("Aow Mao", "No Name", "Sattakut"), get_total_abundance_preds)
ggplot(all_preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
facet_wrap(~ pair, ncol = 3) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = "Predicted Total Fish Abundance Over Time",
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)
# Plot attraction effect per site pair
ggplot(pairwise_results, aes(x = estimate, y = reorder(pair, estimate))) +
geom_point(color = "#66BFA6", size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.2, color = "#66BFA6") +
geom_vline(xintercept = 0, linetype = "dashed") +
labs(
title = "Attraction Effect per Site Pair",
x = "Estimated Interaction: Type × Deployment Period (log scale)",
y = "Site Pair",
subtitle = "Positive values suggest stronger post-deployment increases on Artificial reefs"
) +
theme_minimal(base_size = 12)+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
# Plot attraction effect per site pair
ggplot(pairwise_results, aes(x = estimate, y = reorder(pair, estimate))) +
geom_point(color = "#66BFA6", size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.2, color = "#66BFA6") +
geom_vline(xintercept = 0, linetype = "dashed") +
labs(
title = "Attraction Effect per Site Pair",
x = "Estimated Interaction: Type × Deployment Period (log scale)",
y = "Site Pair",
subtitle = "Positive values suggest stronger post-deployment increases on Artificial reefs"
) +
theme_minimal(base_size = 12)
# Plot
ggplot(plot_df, aes(x = NMDS1, y = NMDS2, fill = Type)) +
stat_ellipse(geom = "polygon", alpha = 0.3) +
geom_point(aes(color = Type), size = 2) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
theme_minimal(base_size = 14) +
labs(
title = "NMDS Plot (Bray–Curtis)",
subtitle = "Community composition by Reef Type",
x = "NMDS1",
y = "NMDS2"
)
# Plot
ggplot(plot_df, aes(x = NMDS1, y = NMDS2, fill = Type)) +
stat_ellipse(geom = "polygon", alpha = 0.3) +
geom_point(aes(color = Type), size = 2) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
theme_minimal(base_size = 14) +
labs(
title = "NMDS Plot (Bray–Curtis)",
subtitle = "Community composition by Reef Type",
x = "NMDS1",
y = "NMDS2"
)+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
ggplot(preds, aes(x = x_date, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2, color = NA) +
facet_wrap(~ facet, scales = "free_y") +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
x = "Date",
y = "Predicted Fish Count",
color = "Reef Type",
fill = "Reef Type",
title = "Modelled Fish Abundance Over Time by Functional Group"
) +
theme_minimal(base_size = 12) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
ggplot(emm_df, aes(x = Type, y = response, fill = Type)) +
geom_col(position = position_dodge(0.7), width = 0.6) +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
position = position_dodge(0.7), width = 0.2) +
facet_wrap(~ Functional_Group, scales = "free_y") +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
x = "Reef Type",
y = "Estimated Fish Count (mean ± 95% CI)",
fill = "Reef Type"
) +
theme_minimal(base_size = 12) +
theme(strip.text = element_text(face = "bold")) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
# Plot
ggplot(emm_df, aes(x = Functional_Group, y = response, fill = Type)) +
geom_col(position = position_dodge(0.8), width = 0.7) +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
position = position_dodge(0.8), width = 0.2) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
x = "Functional Group",
y = "Estimated Fish Count (mean ± 95% CI)",
fill = "Reef Type"
) +
theme_minimal(base_size = 12)+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
# Plot
ggplot(shannon_data, aes(x = Date, y = shannon, color = Type)) +
geom_point(alpha = 0.5, size = 1) +
geom_line(data = pred_grid,
aes(x = Date, y = fit, group = interaction(Site, Type), color = Type),
linewidth = 1) +
geom_vline(xintercept = as.Date("2023-09-07"),
linetype = "dashed", color = "gray40") +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
facet_wrap(~ pair, scales = "free_x") +
labs(
title = "Shannon Diversity Trends by Site Pair",
x = "Date",
y = "Shannon Diversity Index",
color = "Reef Type"
) +
theme_minimal()+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
# faceted
ggplot(shannon_data, aes(x = Site, y = shannon, color = Type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA, position = position_dodge(width = 0.75)) +
geom_jitter(width = 0.2, alpha = 0.6, size = 1) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
facet_wrap(~ pair, scales = "free_x") +
labs(
x = "Site",
y = "Shannon Diversity Index",
color = "Reef Type",
title = "Shannon Diversity by Site Within Pairs"
) +
theme_minimal()
ggplot(all_preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
facet_wrap(~ pair, ncol = 3) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = "Predicted Total Fish Abundance Over Time",
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
library(tidyverse)
ggplot(all_preds, aes(x = Date, y = predicted, color = group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.3, color = NA) +
facet_wrap(~ pair, ncol = 3) +
scale_color_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
scale_fill_manual(values = c("Natural" = "#007A87", "Artificial" = "#66BFA6")) +
labs(
title = "Predicted Total Fish Abundance Over Time",
x = "Date",
y = "Predicted Total Abundance",
color = "Reef Type",
fill = "Reef Type"
) +
theme_minimal(base_size = 14)+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
get_total_abundance_preds <- function(pair_name, data = fish_totals, origin = origin_date) {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)
preds$pair <- pair_name
return(list(preds = preds, model = model))
}
result <- get_total_abundance_preds("No Name")
library(glmmTMB)
library(broom.mixed)
library(dplyr)
library(purrr)
library(tidyverse)
get_total_abundance_preds <- function(pair_name, data = fish_totals, origin = origin_date) {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)
preds$pair <- pair_name
return(list(preds = preds, model = model))
}
result <- get_total_abundance_preds("No Name")
predictions <- result$preds
result <- get_total_abundance_preds("No Name")
library(ggeffects)
get_total_abundance_preds <- function(pair_name, data = fish_totals, origin = origin_date) {
df_sub <- data %>% filter(pair == pair_name)
model <- glmmTMB(
Total_Count ~ Type * date_num + (1 | Site),
data = df_sub,
family = nbinom2()
)
preds <- ggpredict(model, terms = c("date_num", "Type"), type = "fixed")
preds$Date <- as.Date(round(preds$x), origin = origin)
preds$pair <- pair_name
return(list(preds = preds, model = model))
}
result <- get_total_abundance_preds("No Name")
predictions <- result$preds
model_obj <- result$model
summary(model_obj)
result_nn <- get_total_abundance_preds("No Name")
predictions_nn <- result_nn$preds
model_obj_nn <- result_nn$model
summary(model_obj_nn)
result_am <- get_total_abundance_preds("Aow Mao")
predictions_am <- result_am$preds
model_obj_am <- result_am$model
summary(model_obj_am)
result_s <- get_total_abundance_preds("Sattakut")
predictions_s <- result_s$preds
model_obj_s <- result_s$model
summary(model_obj_s)
